(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     95701,       2017]
NotebookOptionsPosition[     93212,       1969]
NotebookOutlinePosition[     93650,       1986]
CellTagsIndexPosition[     93607,       1983]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initialisation code", "Section",
 CellChangeTimes->{{3.835617479611251*^9, 
  3.835617483093994*^9}},ExpressionUUID->"81f83375-4562-4b32-ab30-\
65cc9c7c24cb"],

Cell["Choose a and b as per choice", "Text",
 CellChangeTimes->{{3.851431869688651*^9, 
  3.8514318768118973`*^9}},ExpressionUUID->"00adfee7-ff50-457a-95cd-\
fe0bd6766ad1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"length", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.851431852881981*^9, 
  3.851431882540532*^9}},ExpressionUUID->"4f421529-573d-4b6a-97d5-\
df2c28857796"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getM", "[", 
   RowBox[{"n_", ",", "gm_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"M", ",", "i", ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "n", "}"}], ",", 
        RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "n"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "         ", 
       RowBox[{"{", "\[IndentingNewLine]", "           ", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "==", "1"}], " ", ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "2"}], ",", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"b", "+", "1"}]}], ",", 
             RowBox[{"j", "++"}], ",", 
             RowBox[{
              RowBox[{"M", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
              RowBox[{"1", "-", "gm"}]}]}], "]"}], ",", 
           RowBox[{"Unevaluated", "[", 
            RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "           ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "n"}], " ", ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", 
              RowBox[{"n", "-", "a"}]}], ",", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"n", "-", "1"}]}], ",", 
             RowBox[{"j", "++"}], ",", 
             RowBox[{
              RowBox[{"M", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "gm"}]}], "]"}], 
           ",", 
           RowBox[{"Unevaluated", "[", 
            RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "           ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"2", "<=", "i", "\[LessEqual]", 
            RowBox[{"n", "-", "b"}]}], ",", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"i", "+", "b"}]}], "]"}], "]"}], "=", 
            RowBox[{"1", "-", "gm"}]}], ",", 
           RowBox[{"Unevaluated", "[", 
            RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "           ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "+", "1"}], "<=", "i", "\[LessEqual]", "n"}], ",", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"i", "-", "a"}]}], "]"}], "]"}], "=", "gm"}], ",", 
           RowBox[{"Unevaluated", "[", 
            RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", "      ", "}"}]}], "\[IndentingNewLine]", 
      "      ", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
        RowBox[{"1", "-", "gm"}]}], ",", 
       RowBox[{
        RowBox[{"M", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "n"}], "]"}], "]"}], "=", "gm"}]}], "}"}], ";", 
     "M"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8024111775723867`*^9, 3.8024112326652822`*^9}, {
   3.80241163556236*^9, 3.80241166577415*^9}, {3.80241171821031*^9, 
   3.802411758092711*^9}, {3.802411821097866*^9, 3.802411822313684*^9}, {
   3.8024122931455107`*^9, 3.802412308010523*^9}, {3.802413393165291*^9, 
   3.802413420557507*^9}, {3.802413690450389*^9, 3.802413693780179*^9}, {
   3.802413737392795*^9, 3.8024138813363457`*^9}, {3.8024139390263243`*^9, 
   3.802413949362534*^9}, {3.8024145833361673`*^9, 3.8024145839454517`*^9}, {
   3.802414936335688*^9, 3.802414977677945*^9}, {3.802415012457417*^9, 
   3.8024150229508142`*^9}, {3.802415072064218*^9, 3.8024151312576838`*^9}, {
   3.802415175002542*^9, 3.802415235827578*^9}, {3.802415682989043*^9, 
   3.80241578811191*^9}, {3.8024158248227797`*^9, 3.80241592251333*^9}, {
   3.802415953491922*^9, 3.802416002517578*^9}, {3.802416034766018*^9, 
   3.802416108049466*^9}, {3.802416205340748*^9, 3.802416213315112*^9}, {
   3.802416337294147*^9, 3.802416348485003*^9}, {3.8024166747056217`*^9, 
   3.802416694117697*^9}, {3.80241675743629*^9, 3.802416757692307*^9}, {
   3.802416994581102*^9, 3.8024170214110813`*^9}, {3.802417146104775*^9, 
   3.802417152582659*^9}, {3.802417213060712*^9, 3.8024172157575083`*^9}, {
   3.802417645937201*^9, 3.802417777214765*^9}, {3.802417874614811*^9, 
   3.802417884537094*^9}, {3.80241793304517*^9, 3.802417933656323*^9}, {
   3.802418301174341*^9, 3.802418336336831*^9}, {3.802418969066689*^9, 
   3.802418995408359*^9}, {3.802419463912704*^9, 3.802419475575343*^9}, {
   3.802419528395997*^9, 3.802419541144703*^9}, {3.802419588717409*^9, 
   3.802419683382959*^9}, {3.802420408707862*^9, 3.8024204108939257`*^9}, {
   3.802591346952364*^9, 3.8025913625578823`*^9}, {3.802591879632042*^9, 
   3.8025919310532837`*^9}, {3.802591967558742*^9, 3.8025920229963284`*^9}, 
   3.802592069547524*^9, 3.8025921544801693`*^9, {3.8025922172619467`*^9, 
   3.802592220781116*^9}, {3.802592268756009*^9, 3.802592318937639*^9}, {
   3.802592359412952*^9, 3.802592366997068*^9}, {3.802592451431327*^9, 
   3.802592474779707*^9}, {3.8025925514615803`*^9, 3.8025925653576393`*^9}, {
   3.802592670579624*^9, 3.8025927036991253`*^9}, {3.802592733834943*^9, 
   3.8025927847425528`*^9}, {3.802592835788175*^9, 3.802592836927065*^9}, {
   3.80259290179318*^9, 3.802592920277961*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"8e2181e7-61d3-47d4-b7af-4e4c66b58a17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getM", "[", 
    RowBox[{
     RowBox[{"length", "+", "1"}], ",", "\[Gamma]", ",", "a", ",", "b"}], 
    "]"}], "//", "Transpose"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.826709655437302*^9, 3.8267096598451033`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7255acdd-787b-4731-96b4-0983c2a8f360"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "\[Gamma]"}], "\[Gamma]", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "\[Gamma]"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "\[Gamma]"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.826709651625598*^9, 3.826709660800873*^9}, 
   3.826799610235695*^9, {3.83024440114825*^9, 3.830244420472633*^9}, 
   3.835614749793202*^9, 3.835615364780484*^9, 3.835615484934321*^9, {
   3.835615947088882*^9, 3.835615971943878*^9}, 3.835616053184457*^9, 
   3.8356165563448153`*^9, 3.835617273921191*^9, 3.835617487318493*^9, 
   3.835618168391246*^9, 3.835618466232787*^9, 3.835619356347967*^9, {
   3.844444157353342*^9, 3.844444168622899*^9}},
 CellLabel->
  "Out[5]//MatrixForm=",ExpressionUUID->"16a69f9e-7cf8-40d0-9ff0-\
7fe6aa702707"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalP]", "[", "\[Gamma]_", "]"}], ":=", 
   RowBox[{"DiscreteMarkovProcess", "[", 
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"length", "+", "1"}]}], "]"}], ",", 
       RowBox[{"2", "\[Rule]", "1"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"getM", "[", 
       RowBox[{
        RowBox[{"length", "+", "1"}], ",", "\[Gamma]", ",", "a", ",", "b"}], 
       "]"}], "//", "Transpose"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "[", "\[Gamma]_", "]"}], ":=", 
  RowBox[{"StationaryDistribution", "[", 
   RowBox[{"\[ScriptCapitalP]", "[", "\[Gamma]", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.805805573318941*^9, 3.805805609685709*^9}, {
   3.8058073654756804`*^9, 3.8058073775579777`*^9}, {3.805828816737211*^9, 
   3.805828836740108*^9}, {3.805829315640613*^9, 3.805829320603586*^9}, {
   3.8058774170718307`*^9, 3.805877419820269*^9}, {3.806211051639757*^9, 
   3.8062110588370657`*^9}, {3.806211091656623*^9, 3.806211091827932*^9}, 
   3.8088262508034477`*^9, 3.808826924409009*^9, {3.808827286545013*^9, 
   3.808827304766281*^9}, {3.809240045461874*^9, 3.809240080157876*^9}, {
   3.80924110394802*^9, 3.80924111111617*^9}, {3.809241162376814*^9, 
   3.80924119883705*^9}, 3.80924127133531*^9, 3.8092531614472513`*^9, {
   3.8092542315387297`*^9, 3.809254231853462*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"aa57a4fb-02fb-47da-8d0a-ad831fc6ffb4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", "length"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["p", "1"], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["p", "2"], "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simply", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"\[ScriptCapitalD]", "[", "\[Gamma]", "]"}], ",", 
        RowBox[{"i", "+", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "length", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"th", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"i_", ",", "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Gamma]", " ", "p"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
     SubscriptBox["p", "i"]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sols", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qs", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[LessEqual]", "th"}], ",", 
            RowBox[{"q", "[", 
             RowBox[{"1", ",", "\[Gamma]"}], "]"}], ",", 
            RowBox[{"q", "[", 
             RowBox[{"2", ",", "\[Gamma]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "K", ",", "1"}], "}"}]}], "]"}], "/.", 
        
        RowBox[{"th", "\[Rule]", "j"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"simply", ".", "qs"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"j", " ", ",", 
         RowBox[{
          RowBox[{"\[Gamma]", "/.", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"temp", "\[Equal]", "0.5"}], "&&", 
              RowBox[{"\[Gamma]", ">", "0"}], "&&", 
              RowBox[{"\[Gamma]", "<", "1"}]}], ",", "\[Gamma]"}], "]"}]}], "//",
           "Quiet"}]}], "}"}], "//", "Flatten"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", " ", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "K"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8058070453467503`*^9, 3.8058070503869743`*^9}, {
   3.8058070992804832`*^9, 3.8058071553894987`*^9}, 3.80580726286653*^9, {
   3.805807297127263*^9, 3.8058073034277*^9}, {3.80621209644738*^9, 
   3.806212122080677*^9}, 3.806212255767563*^9, 3.806212291716155*^9, {
   3.806212621653674*^9, 3.806212622614513*^9}, {3.8092401481242027`*^9, 
   3.809240148212429*^9}, {3.809241284940947*^9, 3.809241286344763*^9}, {
   3.809254243939361*^9, 3.809254244273847*^9}, {3.835617382807907*^9, 
   3.835617386492426*^9}, 3.835619434556992*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"88b8072c-5ff7-4f42-ba32-5a6b925a0940"],

Cell[BoxData[
 RowBox[{
  RowBox[{"toplone", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"sols", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "3"}], "&"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.809248824737163*^9, 3.809248825920302*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"7b6fbcf9-0f52-4c6e-8032-b2f9d6cf4a1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"covercol", ",", "cashcol"}], "}"}], "=", 
     RowBox[{
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"col", "[", "x_", "]"}], ":=", 
    RowBox[{"Blend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"covercol", ",", "cashcol"}], "}"}], ",", "x"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"gammastopl", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coltopl", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"col", "[", 
        RowBox[{"1", "-", 
         RowBox[{
         "gammastopl", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "gammastopl", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8356148089693737`*^9, 3.835614810588922*^9}, {
   3.835617329276367*^9, 3.835617335916189*^9}, {3.844444228047155*^9, 
   3.8444442395877333`*^9}, 
   3.8444443314046097`*^9},ExpressionUUID->"330e3df9-76e1-4627-bab8-\
ecfcaeeef5e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.368417, 0.506779, 0.709798]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.368417, 0.506779, 0.709798],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.587148, 0.40736066666666665`, 0.09470066666666668],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.880722, 0.611041, 0.142051]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.880722, 0.611041, 0.142051],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.844444316733756*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"7def6842-8eec-4a1a-8d75-94db6858978d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"i_", ",", "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Gamma]", " ", "p"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
     SubscriptBox["p", "i"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Pwin", "[", 
    RowBox[{"\[Gamma]_", ",", "th_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "\[Gamma]"}], "]"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], "th"], 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"\[ScriptCapitalD]", "[", "\[Gamma]", "]"}], ",", 
        RowBox[{"i", "+", "1"}]}], "]"}]}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"2", ",", "\[Gamma]"}], "]"}], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", 
        RowBox[{"th", "+", "1"}]}], "K"], 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"\[ScriptCapitalD]", "[", "\[Gamma]", "]"}], ",", 
        RowBox[{"i", "+", "1"}]}], "]"}]}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"extremes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Pwin", "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Pwin", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"explorethresh", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "5", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pwinlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", 
       RowBox[{"Pwin", "[", 
        RowBox[{"\[Gamma]", ",", "th"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"th", ",", "explorethresh"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "1", ",", "0.01"}], "}"}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.805807066127941*^9, 3.805807093326709*^9}, {
   3.8058072204537992`*^9, 3.805807226089724*^9}, {3.835617342836488*^9, 
   3.835617351980822*^9}, {3.835618343977536*^9, 3.835618348457016*^9}, 
   3.835618473998818*^9, {3.835618677095007*^9, 3.835618677510373*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"45e6e037-8205-4ed0-a243-4dc2bf9d8aa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Section",
 CellChangeTimes->{{3.808827341465094*^9, 
  3.80882734255552*^9}},ExpressionUUID->"e9b5b26b-b625-497b-98d7-\
fe97b9f6fa73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"toplone", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"toplone", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}]}], "}"}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Black", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", 
        RowBox[{"K", "+", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Soil threshold required by cash crop (\[Theta])\>\"", ",", "14", 
        ",", "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Frequency of cover crop (\[Gamma])\>\"", ",", "14", ",", 
        "Black"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"Lighter", "[", 
     RowBox[{"Blue", ",", "0.3"}], "]"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", 
      RowBox[{"Darker", "[", "Gray", "]"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3", "}"}], ",", " ", "None"}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}], "]"}]}], ",", 
   RowBox[{"Method", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<GridLinesInFront\>\"", "->", "True"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.835619561249662*^9, 3.83561957616962*^9}, {
  3.8356196140580597`*^9, 3.835619623337286*^9}, {3.8356196636121187`*^9, 
  3.835619667183969*^9}, {3.835619710662064*^9, 3.835619724732647*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"25e07306-a7f0-4ef0-95cb-c3ca683e2215"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQM6wbNrf9y9ZQ/hfbBf4MOW4TftHpTP4GC/YltY
seEDKJ/D4dPltLrl92F8AQeVP9tkHzU/hPJFHCqYTlzeaP0IypdwEK6IubnF
9DGUL+OwqPqazD+/pzDzGaq1UzW+/H8Ot18mMG/6BTifweHQ25rJqXA+h4Nl
yVRGpX/P4fZfeecu7fzrOdx+raLIM//fPofbP7OjvUTm8HO4/V+cPukaHHsG
t3+k+h8AwoWYeA==
    "], {{{}, {}, {}, {}, {}, {}, 
      {RGBColor[0.3, 0.3, 1.], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{1, 2, 3, 4, 5, 6, 7, 8, 16, 15, 14, 13, 12, 11, 10, 
         9}}]]}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6],
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, 
      {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6],
        LineBox[{9, 10, 11, 12, 13, 14, 15, 16}]}}, {
      {RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
       PointSize[Large], AbsoluteThickness[1.6], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, 
      {RGBColor[
       0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`], 
       PointSize[Large], AbsoluteThickness[1.6], 
       PointBox[{9, 10, 11, 12, 13, 14, 15, 16}]}, {}, {}, {}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Frequency of cover crop (\[Gamma])\"", 14, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Soil threshold required by cash crop (\[Theta])\"", 14, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.003]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{3}, None},
  GridLinesStyle->Directive[{
     GrayLevel[0], 
     Thickness[0.004]}],
  Method->{
   "GridLinesInFront" -> True, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 10.5}, {-0.01, 1.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.835617406703206*^9, 3.835618123360671*^9, 3.835618294890029*^9, 
   3.835618589514604*^9, 3.835619576568612*^9, 3.835619624177457*^9, 
   3.835619667836245*^9, {3.835619712226243*^9, 3.835619725115885*^9}, 
   3.844444338569683*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"13a3a6dc-0ff6-48c2-856e-b569c68fa35b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "-", "1"}], ",", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"\[ScriptCapitalD]", "[", "\[Gamma]", "]"}], ",", "k"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "gammastopl"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"length", "+", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "coltopl"}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotLegends", "\[Rule]", "gammastopl"}], ","}], "*)"}], 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", 
        RowBox[{"length", "+", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.05"}], ",", "1.05"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Soil Quality\>\"", ",", "14", ",", "Black"}], "]"}], ",", 
      
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Probability distribution\>\"", ",", "14", ",", "Black"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806211295661869*^9, 3.80621141894212*^9}, {
   3.806211560009243*^9, 3.806211610280107*^9}, {3.806211652682526*^9, 
   3.8062116765677433`*^9}, {3.806211711375691*^9, 3.8062117194199543`*^9}, {
   3.806211760532209*^9, 3.806211770131138*^9}, {3.806211819631844*^9, 
   3.8062119466438217`*^9}, 3.806211986678515*^9, {3.806212064559765*^9, 
   3.806212064706368*^9}, {3.809246074851554*^9, 3.8092461020510817`*^9}, {
   3.809251869021123*^9, 3.809251871944378*^9}, 3.809251905239435*^9, {
   3.8356167217441797`*^9, 3.835616724988185*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"81bf1dca-323d-4123-8ff3-67ec72ba88a9"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztll1IFFEUx++uYpMWbbGS4YTjuomKIVluZblzMi0LwXT7EpLNwspQloVk
k6I0NEwJSe3rpcCHLH1IodBNTVf7UNHWHjSwD60kLIVWkRSNNmbh3p17od6C
Hua+DD/m4f7m3nP+c0KPWTJy1AghPxVC0pNeLpF+kgU0cgxrGNYyHMQwz7DA
sI5hPcMINTYU8C+tU8S3yzzyszHFjr1hJrhrrKjwsoh9BzYeati6YBKxb6HP
afOCI1TEvu4NucHt174bse+vfih/tqLNiH3Do+oSq6bLjNj3+YFHCZrog0bs
+8NgGjr+OMyIfdU+oc19JdMJ2Pe8Ch1FaIL42jzcQ3zNHr5PfLM9XEZ87WqJ
TxHfV8skThGx78IqiSNE7FtllZgTse+aLZ79ie+Riyppf+L7Id1X2t+IfbfP
bZqu3POJ+ArxhoArmU7iW3nX1rlk9Anx9Q+u6E3j6oivs2SpuNheTXz7bnye
WpwsIr7hN7MjEtX5xDc9MGZ31vvDxPfsZKrTb1+yiH0rS0+E3EqKFbFved7a
Ht/0EFKnnVXD7+KuDxHf+u6eczMv+olv35vSjNSYbuLbEZLVnVNjJ74jHRPR
t5c3Ed9x99i2/rZ7xPdh/XCaJv0O8f1iHR/1N9QQ39mp0ij7TDnxtaRk8uFz
xcS3KcA2GDtrI767VmedeZ3cTHxpRkAzx7CGYS3DQQzzDAsM6xjWM4yQifJ3
icXU9yFwUN/PwVXqfDSwnzo/LbQz5+ukzp+HFup+BBik7k8HrdT96mGAun+E
Ai3y+nCJmUXy+kFQ+01eXxxYVsrrTwPra+T1qYU8pn7fUvXNgx9V/wJUUP2h
g3VU/+ghkeovhBp0brO3/1xiZK3EuD8R7P0oMe5fDjbPS8wRX4Nb4gjiu4jo
fDCp5PnBQz6VLwJcoPJHB8VUPunhEpVfCLXk9hZ4880lPi1xdHnzD8FO64N4
bz5yYKj+usObnxoQksJk+aqFEeEklb+R87myfObBESfPbwGSeHm+64DOfz20
Uv8Hdv2v/zeXSPOflvL+7+/xUuYZ7KvMM8o8o8wzyjyDfZV5RplnvOvfzTO/
AVKFCTQ=
    "], {{{}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[{{1, 141, 2}}]]}, {}, 
      {RGBColor[0.8294915, 0.6006148, 0.1988257], Opacity[0.2], EdgeForm[
       None], GraphicsGroupBox[
        PolygonBox[{{12, 139, 140, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
         13}}]]}, {}, 
      {RGBColor[0.7782610000000001, 0.5901886, 0.2556004], Opacity[0.2], 
       EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{23, 137, 138, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
         24}}]]}, {}, 
      {RGBColor[0.7270304999999999, 0.5797623999999999, 0.31237510000000007`],
        Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{34, 135, 136, 44, 43, 42, 41, 40, 39, 38, 37, 36, 
         35}}]]}, {}, 
      {RGBColor[0.6758, 0.5693362, 0.36914980000000003`], Opacity[0.2], 
       EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{45, 133, 134, 55, 54, 53, 52, 51, 50, 49, 48, 47, 
         46}}]]}, {}, 
      {RGBColor[0.6245695, 0.55891, 0.42592450000000004`], Opacity[0.2], 
       EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{56, 131, 132, 66, 65, 64, 63, 62, 61, 60, 59, 58, 
         57}}]]}, {}, 
      {RGBColor[0.5733389999999999, 0.5484838, 0.4826992000000001], Opacity[
       0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{67, 129, 130, 77, 76, 75, 74, 73, 72, 71, 70, 69, 
         68}}]]}, {}, 
      {RGBColor[0.5221085, 0.5380575999999999, 0.5394739000000001], Opacity[
       0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{78, 127, 128, 88, 87, 86, 85, 84, 83, 82, 81, 80, 
         79}}]]}, {}, 
      {RGBColor[0.47087799999999996`, 0.5276314, 0.5962486], Opacity[0.2], 
       EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{89, 125, 126, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
         90}}]]}, {}, 
      {RGBColor[0.4196475, 0.5172051999999999, 0.6530233000000001], Opacity[
       0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{100, 123, 124, 110, 109, 108, 107, 106, 105, 104, 103, 
         102, 101}}]]}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{120, 122, 
         121}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, 
      {RGBColor[0.8294915, 0.6006148, 0.1988257], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, 
      {RGBColor[0.7782610000000001, 0.5901886, 0.2556004], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}]}, 
      {RGBColor[0.7270304999999999, 0.5797623999999999, 0.31237510000000007`],
        PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44}]}, 
      {RGBColor[0.6758, 0.5693362, 0.36914980000000003`], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55}]}, 
      {RGBColor[0.6245695, 0.55891, 0.42592450000000004`], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66}]}, 
      {RGBColor[0.5733389999999999, 0.5484838, 0.4826992000000001], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77}]}, 
      {RGBColor[0.5221085, 0.5380575999999999, 0.5394739000000001], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88}]}, 
      {RGBColor[0.47087799999999996`, 0.5276314, 0.5962486], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99}]}, 
      {RGBColor[0.4196475, 0.5172051999999999, 0.6530233000000001], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121}]}}, {
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}]}, 
      {RGBColor[0.8294915, 0.6006148, 0.1988257], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}, 
      {RGBColor[0.7782610000000001, 0.5901886, 0.2556004], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}]}, 
      {RGBColor[0.7270304999999999, 0.5797623999999999, 0.31237510000000007`],
        PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44}]}, 
      {RGBColor[0.6758, 0.5693362, 0.36914980000000003`], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55}]}, 
      {RGBColor[0.6245695, 0.55891, 0.42592450000000004`], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66}]}, 
      {RGBColor[0.5733389999999999, 0.5484838, 0.4826992000000001], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77}]}, 
      {RGBColor[0.5221085, 0.5380575999999999, 0.5394739000000001], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88}]}, 
      {RGBColor[0.47087799999999996`, 0.5276314, 0.5962486], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99}]}, 
      {RGBColor[0.4196475, 0.5172051999999999, 0.6530233000000001], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 
        121}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Probability distribution\"", 14, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Soil Quality\"", 14, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.003]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 10.5}, {-0.05, 1.05}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8062113321334248`*^9, 3.806211346931068*^9}, {
   3.806211386795163*^9, 3.806211419478801*^9}, 3.806211610606915*^9, {
   3.8062116604697313`*^9, 3.806211677143325*^9}, {3.8062117642479258`*^9, 
   3.806211771135385*^9}, {3.8062118574883633`*^9, 3.806211867173325*^9}, {
   3.806211901430809*^9, 3.806211947786174*^9}, {3.806211988136883*^9, 
   3.80621200887276*^9}, 3.80621206846692*^9, 3.806213504106462*^9, 
   3.806599504133237*^9, 3.808809400463388*^9, 3.8088262884479647`*^9, 
   3.808827004188414*^9, 3.808827385206295*^9, 3.808827759786674*^9, 
   3.808828199744032*^9, 3.8092451425870934`*^9, 3.809245830274413*^9, 
   3.809245874678507*^9, 3.809245972277967*^9, {3.809246083726734*^9, 
   3.809246104451886*^9}, 3.8092462746250887`*^9, 3.809246338682897*^9, 
   3.826799593117222*^9, 3.826799627533325*^9, 3.835614822513481*^9, {
   3.835616314910698*^9, 3.8356163269244633`*^9}, {3.835616711833671*^9, 
   3.835616725696743*^9}, 3.835617408422364*^9, 3.835618123805667*^9, 
   3.835618296231124*^9, 3.835618590794717*^9, 3.8444443404140863`*^9},
 CellLabel->"Out[28]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
0c8EdpIRTZOpVSmdOHyluYELREWJOswtYaoz0ldpdZibDnwlTLFbqZBWIXeQ
xatbq9WtjahbotUNRtSVanXqnuJ/u3457Ytqi173VbQlV12JP1ozpBlS/F9k
P7yGyLppvovJuhKmK17WlVJdiVanhJim1akGF2t1vsZRndsO/O3qb9/aPNqn
2qK3T7VFb59qi96+4W5LqaEteenqfw3pb4vevv815HA17n8NOcyGvMNwg5kG
Ie4wKGWmQbDAef/buC+/ceIbcXjg/83Tj5Jf+eZ8RhnqinK77BHyq2KWZZ6F
xoRn0SX+KP4X87ep3JokspQxJz2oWWr58+deXbzfe02TpGWXXjn3+bVXzntx
8Mp5L+DzMf9jqo8azmu/1Hbe2lfazx98pe18fI7oYmSNWBMxZA3kq5C1OUaz
Rqzfe9aQ4zCr5Iq5L6SvmvciCv8CR2sJP067fO7zKOwIcbQg2v8X5x32Fd53
ZuXSaWvbTkfh5+Folb7adlaa4waFn4ejBfwozNACqQggZZ+9SuVyngBLslR8
O41pfzJlYgH7rmBp8QmHkVLE9E3lT7viHCmOTnp166Xp51p/lO5puQKf0UVo
QY64QykVZpeq+9M4XLQ09rSUk9PZImdBz5GXGuRE/44p5xHSbOkX2i5Or2i5
CoWLgaM1uKrVnZSnrLMbiYl7JzPEzT7f5MQ8T4go7Vniajso59rbKh4NAjV9
R+USt24z1d1YvjzjvFsrnnDrbqG668p6Ms7Tf/sM1dXWVqRfar8Qhf+PH5Pp
NW0/KIAWk4BJKr2q9bIUgJMCckaQQp9tuTKo0GImw1ohpC1FNfUX0m/WOSwn
5nmefiW5OoOtdQ+kZ1ctEDpA4Z/ZiHRr/QMHpZvr5zA7+GUBqp0vWuvusz9v
r5/tfNZZf5c90N1wh9P/cMOt9ntLm24e/97ihltZ8jMOpHR3w11C5Sj88+dv
tJ+e+HxN6w8SX/y07ZxU+o2O7+/CdXjRSKjK2vFk03WJLUsbZzBrc3fDnTue
bb4qzdvHGzyj4kneFLSV63VHd/0slGR6cePtRemO+tlF6Ya6eePSlfNrU+ny
+fUcovyjgMS1ZT8RBZ953V74enK6rKaBd/Lg9/KXpTVNVrq6toZbGBepqytD
4W3gOnHSCxruEhooStfUVhWkS+c3FaRnVy/gV+NNTF9TtkoUfEbt2PQ91Qsn
pO+uergwPavqESv9QHUHP5XfaEfl/BoU1AjpEvghl5F/3nFX1aLNd1WKkthy
R8XSxI5bKx7fn3/1VALXSqQfqmlJfDGPC2F9XjG/Fp9gHn6NknnPSzx/Nqe6
9T1uHzYOx0T/gvo7rfda6h5w+rvq73IGHm643f6Mm8r5nKvc+eKZ5hIbmpUU
YHPB54sOgMI/H28AcgTJB0AbOufoxDwvCFqrtKXuPpgDhV0nDPNFW/299udd
DXfbn3HksOQXP++cln6es/hjTTelFzbeKT5v6DoxkX61/Vwr/WbnaRb+Ozn9
UfeR1o73u45lzpa+rhM2/6xzmiofr+v4HrP6Xm0/J7HuxdaLEmtWtlzhrOD6
YtaaFS1Xr3uu5Ydb1naczg5K/6zzO9Z2jufE0JrWC6xNz7dewuy+npbLe7le
RXmk8ZbEqq6Gu5i1qb62VOCKFy4TjlZfU92c3ra62SjMwf9snOYMcb6xtlfV
VB2L8xLputpygUImYJhe0nirW55ons6U8Va3Xap4HsXZzjnKHlrdeomzqaf1
R1bf8uar7N4nm67ljamprQROBVYT4mj3zaupW1VTW95bUVONYqEisWludXNi
6MHq1sT2+6s6DhanWh+X1jSuq6ipWVE3v5Q5OFprquZXM2tdaU1DHz8ZhZ92
b9WChItlZgHMwDIK2wdH57MlDTOczx9vmm5/8XTTj6+XcCt9tikXuGWd5XVi
nufBTQ0HONzAk1901N8z8GjjjfbbnNlS7z3bclWq/8nm61KoS33GOS/1Ocde
EqedIuxkCdQpoCao7tmWEreuEEcbAE0AqeLLBH6V2LGi+YrE5uXNVyf6nmq+
LrEOEFrzWONNo4DABADIgfNC60WbX2s7S8BwDwnD9R3fTQzx/yc2vdZ+VqLv
5dbzrN7nOXpX9bT8KLGMg3Fc12NNN3I7c5gBWyj4XIBqa9mTzdcyZ9Xylqt7
V7ZeoUrfcy2XsQRwnRh6sfUHzNr+UtuF/hDQAexsweIAYxKotABTBxIK7H4N
KLa2V9Zwah3idwX6UFiir7a2LNFbV1uaWNVQ+xCzljXX3d/VWn8vCisQR4FL
YA8Fn8eiOrGsoXZOAnBN+LFqDQno4WQX4LtLgO+4r7pj85zqFoXeUQCuvaal
lttmXUf93X3NdQ9+3MFvmdjcVDuHWVvqast2NNU9yEWAF8DRAoML5gafJ0Dt
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
\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"d2ff00c2-e739-4bcb-ba1a-6fc9f5178d5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"pwinlist", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}],
    ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Frequency of cover crops (\[Gamma])\>\"", ",", "14", ",", 
        "Black"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Probability of making a profit\>\"", ",", "14", ",", "Black"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.05"}], ",", "1.05"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.05"}], ",", "0.65"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", "0.5", "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Thickness", "[", "0.0032", "]"}]}], "}"}], "]"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Lighter", "[", "Blue", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "cashcol", ",", 
      RowBox[{"Point", "[", 
       RowBox[{
       "extremes", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "]"}], ",", 
      RowBox[{"PointSize", "[", "Large", "]"}], ",", "covercol", ",", 
      RowBox[{"Point", "[", 
       RowBox[{
       "extremes", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "]"}], ",", "Black", ",", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(min\)]\)\>\"", ",", "18"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.45", ",", "0.55"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(max\)]\)\>\"", ",", "18"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", "0.55"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"\"\<\[Theta] = \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
            "explorethresh", "\[LeftDoubleBracket]", "4", 
             "\[RightDoubleBracket]"}], "]"}]}], ",", "18"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.94", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"Method", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<GridLinesInFront\>\"", "->", "True"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.835618307514153*^9, 3.8356183236289377`*^9}, {
  3.83561859949251*^9, 3.835618602337755*^9}, {3.83561936806201*^9, 
  3.835619378605338*^9}, {3.835619495963725*^9, 3.835619519647522*^9}, {
  3.835619678715765*^9, 3.8356197020062237`*^9}, {3.835619733637792*^9, 
  3.835619740180498*^9}, {3.844444257637339*^9, 3.844444286661785*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c6e65348-dc57-4ea1-a658-c181dd9215c6"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztlWtQVGUYx5lmHBBFTCUGRUQTBQzUYaxk0D8htoikoAlmCyrjBRk0UEAD
tJwEBTXQENJBQwGVguWiBHFVkIsEK/dd2AvnsAsschG0tTCz9uw+MlPTJz/z
zJw58573vM/l/3veeRb6f7Fl71t6enpCzcO9/2uRcwQ8NuIUGhaenurpHwzd
OhFGl+pn7/L/GkUW0YNeRdcgPjag3/bdGdpPR4jCetmAfwKuXOYsE4VPD6cH
RCXS/wLEf/Z3cHHS9xjy4r7k4R2nsAr3/BQ6fxdO7p+0Ne9PhaEoLXiNYSGe
uh/PLzp6g/z9grnzo6LXxabDhh9fqbYuRezM3c/GUm6S/3IoDzyv4N+5jXTN
aVHaPey0jFu5uvFHincfRdMPKPmDWXDQWhUaK9znVc7IofgP4H7Zd9PHKbmo
UltrIlTjm4iSZP2CPMqnFmOnWpUBLfnYog1Yh52Lglw91Hcov4fgCSyqCywK
wEZwDuvRXPhC9mjzz5RvA84dnbtrNLYQIVx6wY3wvVn98qqwiPIXQupz7EDS
gmLoKDRhG3N2SfuJEqqnCetq5vZeGSmFmzZAM2adXRMZFlJO9TUj2ex9y8VT
7oGLxo9vAf9qynpb+T2qtxVyj+Sh1Or70JYjaoXxpqqQi2WVVH8bxLJAZ5e6
Kizg0rFoh23oSW871QPSox1W04U5+pY12L+Psw5YTbP86+7hWtJHhGh7vzhH
RR04b3MEIoyNbRTcCq0nvcS4UMZmj9k04DnnTi2GocUtUcUUIenXCfHziLhZ
U5qwVuuwC2qPGuki82bSswsZS/OK1bwWaNOLluDtS3XLTp9uJX2l8P+pxSdX
3IbGBs6kWFI+LXX8gw7SW4aMoMjrMakimGgTlMPKc82nttM7SX85NsR/HpN9
pAtad/xu9A3HVbs9khAPBma+oc3rTWVUD4PRYTdFjquc+DAYH3C+/9Srm+pj
kF8yZ3PGfIZ4sXBIMzL78iuG6mXhd+PGyRghQ/xY7DHpScyexlL9PYjcbHNs
34cs8ezBeecnf8Z4s6RHDw692LrdKIAlvgr09pnkqg+xpI8CNQ+v88wPssRb
geDIMznL9rCklxIXy3mZidtY4q/EhcUNJuddWNJPiayAlYGz32OpH3pRMON8
2m+zWNKzF3sPGru0/s5Qf2jWD+y32UsY0rcPXuf2GgSUMdQvfdhqVxnw6zWG
9O6DlQQbL2j00PVPP1bXf7tduZMh/fuxQcnbogRD/dQP5xzrrNsLGOKhgjgh
yTb6VTfxUMHgapDp8bJu4qEC33TtuxujXvNQgfEMW/HSsZt4DEDVMXP35XE5
8RhAiaDQwkbTBzoeA6huDJLnhMuJx2M4rQ7PXbFKjgQtj8eo3e+dmf1MRjwe
42JfqZ11vox4DMKIN259XdN3Oh6D8Jma4WC2XEY8BqHn0yhIGJYSjyE0OAo7
9LOkxGMIo0edmk4ESonHEIyOXMnl+lzHYxiez+adCuqXEI9hxB3391JkSIjH
MBJ3dM7bsUdCPEYg81ja27RIQjxG8IedgfZe6XiMwOVhTXj5D13E4wmkFVFY
5ff6PjzBR1YrDbLMu4iHZr2Lc9dJPEYn7vFu1+X1YwwzcW+GXpYbL3zVP7H+
97RhJs7///7kPJqcR5PzaHIeTc6jyXn0ZvPoH58gTe8=
    "], {{{}, 
      {RGBColor[
        NCache[
         Rational[1, 3], 0.3333333333333333], 
        NCache[
         Rational[1, 3], 0.3333333333333333], 1], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{102, 103, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64,
          63, 62, 61, 60, 59, 58, 57, 56, 55, 54}}]]}, {}, {}}, {{}, {}, 
      {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 102, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
        69, 70, 71, 72, 73, 74, 75, 103, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
        85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 
        101}]}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Large], 
    RGBColor[0.880722, 0.611041, 0.142051], 
    PointBox[{0, 0.}], 
    PointSize[Large], 
    RGBColor[0.368417, 0.506779, 0.709798], 
    PointBox[{1, 0.4}], 
    GrayLevel[0], 
    InsetBox[
     BoxData[
      FormBox[
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(min\\)]\\)\"", 18, 
        StripOnInput -> False], TraditionalForm]], {0.45, 0.55}], 
    InsetBox[
     BoxData[
      FormBox[
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(max\\)]\\)\"", 18, 
        StripOnInput -> False], TraditionalForm]], {0.8, 0.55}], 
    InsetBox[
     BoxData[
      FormBox[
       StyleBox["\"\[Theta] = 3\"", 18, StripOnInput -> False], 
       TraditionalForm]], {0.94, 0}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Probability of making a profit\"", 14, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Frequency of cover crops (\[Gamma])\"", 14, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.003]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, {0.5}},
  GridLinesStyle->Directive[{
     GrayLevel[0], 
     Thickness[0.0032]}],
  Method->{
   "GridLinesInFront" -> True, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.05, 1.05}, {-0.05, 0.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.835618308003318*^9, 3.835618324090416*^9}, 
   3.8356183638349657`*^9, {3.835618592008655*^9, 3.835618602781588*^9}, 
   3.835618693854287*^9, {3.83561949324891*^9, 3.835619519954339*^9}, {
   3.835619680356866*^9, 3.835619702233213*^9}, {3.8356197344911013`*^9, 
   3.835619740740148*^9}, 3.8444443421275806`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"bd624332-096a-4db3-aaf9-3084615201a9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
     "pwinlist", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], ",", 
     
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Frequency of cover crops (\[Gamma])\>\"", ",", "14", ",", 
          "Black"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Probability of making a profit\>\"", ",", "14", ",", "Black"}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.05"}], ",", "1.05"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.05"}], ",", "0.65"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", " ", 
        RowBox[{"{", "0.5", "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"Lighter", "[", "Blue", "]"}]}], "}"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "Large", "]"}], ",", "cashcol", ",", 
        RowBox[{"Point", "[", 
         RowBox[{
         "extremes", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"PointSize", "[", "Large", "]"}], ",", "covercol", ",", 
        RowBox[{"Point", "[", 
         RowBox[{
         "extremes", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "]"}], ",", "Black", ",", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(min\)]\)\>\"", ",", "18"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.45", ",", "0.55"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(max\)]\)\>\"", ",", "18"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.55"}], "}"}]}], "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<\[Theta] = \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{
              "explorethresh", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}], "]"}]}], ",", "18"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.94", ",", "0"}], "}"}]}], "]"}]}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "explorethresh", "]"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8444442962442923`*^9, 
  3.844444301529026*^9}},ExpressionUUID->"5f071280-f612-4370-8640-\
792194b71377"]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"97ae811d-fac1-4824-9c38-69324eedf324"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 164, 3, 67, "Section",ExpressionUUID->"81f83375-4562-4b32-ab30-65cc9c7c24cb"],
Cell[747, 27, 172, 3, 35, "Text",ExpressionUUID->"00adfee7-ff50-457a-95cd-fe0bd6766ad1"],
Cell[922, 32, 337, 9, 73, "Input",ExpressionUUID->"4f421529-573d-4b6a-97d5-df2c28857796"],
Cell[1262, 43, 5953, 126, 241, "Input",ExpressionUUID->"8e2181e7-61d3-47d4-b7af-4e4c66b58a17"],
Cell[CellGroupData[{
Cell[7240, 173, 357, 8, 30, "Input",ExpressionUUID->"7255acdd-787b-4731-96b4-0983c2a8f360"],
Cell[7600, 183, 2182, 50, 212, "Output",ExpressionUUID->"16a69f9e-7cf8-40d0-9ff0-7fe6aa702707"]
}, Open  ]],
Cell[9797, 236, 1643, 33, 94, "Input",ExpressionUUID->"aa57a4fb-02fb-47da-8d0a-ad831fc6ffb4"],
Cell[11443, 271, 3101, 82, 241, "Input",ExpressionUUID->"88b8072c-5ff7-4f42-ba32-5a6b925a0940"],
Cell[14547, 355, 376, 10, 30, "Input",ExpressionUUID->"7b6fbcf9-0f52-4c6e-8032-b2f9d6cf4a1e"],
Cell[CellGroupData[{
Cell[14948, 369, 1486, 44, 94, "Input",ExpressionUUID->"330e3df9-76e1-4627-bab8-ecfcaeeef5e3"],
Cell[16437, 415, 3697, 100, 34, "Output",ExpressionUUID->"7def6842-8eec-4a1a-8d75-94db6858978d"]
}, Open  ]],
Cell[20149, 518, 2408, 70, 148, "Input",ExpressionUUID->"45e6e037-8205-4ed0-a243-4dc2bf9d8aa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22594, 593, 152, 3, 67, "Section",ExpressionUUID->"e9b5b26b-b625-497b-98d7-fe97b9f6fa73"],
Cell[CellGroupData[{
Cell[22771, 600, 2683, 72, 199, "Input",ExpressionUUID->"25e07306-a7f0-4ef0-95cb-c3ca683e2215"],
Cell[25457, 674, 2834, 66, 259, "Output",ExpressionUUID->"13a3a6dc-0ff6-48c2-856e-b569c68fa35b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28328, 745, 2289, 56, 136, "Input",ExpressionUUID->"81bf1dca-323d-4123-8ff3-67ec72ba88a9"],
Cell[30620, 803, 50088, 843, 255, 9925, 186, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d2ff00c2-e739-4bcb-ba1a-6fc9f5178d5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80745, 1651, 3745, 99, 262, "Input",ExpressionUUID->"c6e65348-dc57-4ea1-a658-c181dd9215c6"],
Cell[84493, 1752, 5131, 114, 255, "Output",ExpressionUUID->"bd624332-096a-4db3-aaf9-3084615201a9"]
}, Open  ]],
Cell[89639, 1869, 3557, 97, 241, "Input",ExpressionUUID->"5f071280-f612-4370-8640-792194b71377"]
}, Open  ]]
}
]
*)

